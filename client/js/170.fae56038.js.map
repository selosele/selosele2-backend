{"version":3,"file":"js/170.fae56038.js","mappings":"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","sources":["webpack://selosele2/./src/services/breadcrumb/breadcrumbService.js","webpack://selosele2/./src/views/AppAdminCategory.vue","webpack://selosele2/./src/components/views/category/AppSaveCategory.vue","webpack://selosele2/./src/components/views/category/AppSaveCategory.vue?72a4","webpack://selosele2/./src/views/AppAdminCategory.vue?bf5c"],"sourcesContent":["import store from '@/store/store';\r\nimport { isNotEmpty } from '@/utils/util';\r\n\r\n/** Breadcrumb Service */\r\nclass BreadcrumbService {\r\n\r\n  constructor() {\r\n  }\r\n\r\n  /** 페이지 타이틀 변경 */\r\n  setPageTitle(pageTitle) {\r\n    if (isNotEmpty(pageTitle)) {\r\n      document.title = `${pageTitle} - ${store.state.BlogConfig.data.title}`;\r\n    } else {\r\n      document.title = store.state.BlogConfig.data.title;\r\n    }\r\n  }\r\n  \r\n}\r\n\r\nexport const breadcrumbService = new BreadcrumbService();\r\n","<template>\r\n  <app-content-wrapper :pageTitle=\"pageTitle\">\r\n    <template v-if=\"!dataLoaded\">\r\n      <ui-skeletor :height=\"'1.3rem'\"></ui-skeletor>\r\n      <ui-skeletor :height=\"'1.3rem'\"></ui-skeletor>\r\n      <ui-skeletor :height=\"'1.3rem'\"></ui-skeletor>\r\n    </template>\r\n\r\n    <template v-else>\r\n      <div class=\"d-flex flex--right gap--10 mb--15\">\r\n        <ui-button :color=\"'primary'\"\r\n                   @click=\"addCategory\">추가\r\n        </ui-button>\r\n      </div>\r\n\r\n      <ui-tabs @onTabChanged=\"onTabChanged\">\r\n        <ui-tab :name=\"'카테고리'\">\r\n          <ui-split-pane>\r\n            <ui-pane :isTransparent=\"true\">\r\n              <ui-tree :nodes=\"categoryTree\"\r\n                       :useCheckbox=\"false\"\r\n                       :filter=\"true\"\r\n                       :placeholder=\"'카테고리/포스트 제목 입력'\"\r\n                       @onNodeClick=\"onNodeClick\">\r\n              </ui-tree>\r\n            </ui-pane>\r\n\r\n            <ui-pane v-if=\"isSplitterActive\">\r\n              <app-save-category :category=\"category\"\r\n                                 :key=\"type + category.id\">\r\n              </app-save-category>\r\n            </ui-pane>\r\n          </ui-split-pane>\r\n        </ui-tab>\r\n\r\n        <ui-tab :name=\"'태그'\">\r\n          <ui-split-pane>\r\n            <ui-pane :isTransparent=\"true\">\r\n              <ui-tree :nodes=\"tagTree\"\r\n                       :useCheckbox=\"false\"\r\n                       :filter=\"true\"\r\n                       :placeholder=\"'태그/포스트 제목 입력'\"\r\n                       @onNodeClick=\"onNodeClick\">\r\n              </ui-tree>\r\n            </ui-pane>\r\n\r\n            <ui-pane v-if=\"isSplitterActive\">\r\n              <app-save-category :category=\"category\"\r\n                                 :key=\"type + category.id\">\r\n              </app-save-category>\r\n            </ui-pane>\r\n          </ui-split-pane>\r\n        </ui-tab>\r\n      </ui-tabs>\r\n    </template>\r\n  </app-content-wrapper>\r\n</template>\r\n\r\n<script>\r\nimport AppSaveCategory from '@/components/views/category/AppSaveCategory.vue';\r\nimport { breadcrumbService } from '@/services/breadcrumb/breadcrumbService';\r\nimport { isNotEmpty } from '@/utils/util';\r\n\r\nexport default {\r\n  name: 'app-admin-category',\r\n  components: {\r\n    AppSaveCategory\r\n  },\r\n  data() {\r\n    return {\r\n      pageTitle: '카테고리/태그 관리',\r\n      dataLoaded: false,\r\n      categoryTree: [],\r\n      tagTree: [],\r\n      category: {},\r\n      type: '',\r\n      activeIndex: -1,\r\n    }\r\n  },\r\n  created() {\r\n    this.init();\r\n  },\r\n  methods: {\r\n    /** 초기 세팅 */\r\n    async init() {\r\n      // 페이지 타이틀 세팅\r\n      breadcrumbService.setPageTitle(this.pageTitle);\r\n\r\n      await Promise.all([\r\n        this.listTreeCategoryAndPost(),\r\n        this.listTreeTagAndPost(),\r\n      ]);\r\n\r\n      this.$store.commit('Splitter/TOGGLE', true);\r\n      this.dataLoaded = true;\r\n    },\r\n    /** 카테고리-포스트 계층형 구조 조회 */\r\n    listTreeCategoryAndPost() {\r\n      return this.$http.get('/category/list/tree')\r\n        .then(res => {\r\n          this.createTree(res.data, 'category');\r\n        });\r\n    },\r\n    /** 태그-포스트 계층형 구조 조회 */\r\n    listTreeTagAndPost() {\r\n      return this.$http.get('/tag/list/tree')\r\n        .then(res => {\r\n          this.createTree(res.data, 'tag');\r\n        });\r\n    },\r\n    /** 트리 생성 */\r\n    createTree(data, type) {\r\n      data.forEach(parent => {\r\n        let childNodes = [];\r\n\r\n        if ('category' === type) {\r\n          childNodes = parent.postCategory;\r\n        } else {\r\n          childNodes = parent.postTag;\r\n        }\r\n\r\n        // 최상위(카테고리/태그) node\r\n        let rootNode = {\r\n          id: parent.id,\r\n          label: this.getTreeLabel(parent.nm, type),\r\n          nodes: childNodes.map((child, idx, self) => {\r\n            if (0 === self.length) return {};\r\n\r\n            // 자식(포스트) node\r\n            let postNode = {\r\n              id: child.postId,\r\n              label: child.post.title,\r\n            };\r\n\r\n            return postNode;\r\n          }),\r\n        };\r\n\r\n        // node를 배열에 넣는다.\r\n        this.pushNode(rootNode, type);\r\n      });\r\n    },\r\n    /** 트리 label 가공 */\r\n    getTreeLabel(label, type) {\r\n      return 'category' === type ? label : `#${label}`;\r\n    },\r\n    /** 트리 배열에 node 넣기 */\r\n    pushNode(node, type) {\r\n      if ('category' === type) {\r\n        this.categoryTree.push(node);\r\n      } else {\r\n        this.tagTree.push(node);\r\n      }\r\n    },\r\n    /** node 클릭 시 */\r\n    onNodeClick(node) {\r\n      this.$store.commit('Splitter/TOGGLE', true);\r\n      \r\n      if (isNotEmpty(node.nodes)) {\r\n        this.getCategory(node);\r\n      }\r\n    },\r\n    /** 탭 변경 시 */\r\n    onTabChanged(selectedTab) {\r\n      this.activeIndex = selectedTab.tab.index;\r\n    },\r\n    /** 카테고리 조회 */\r\n    getCategory(node) {\r\n      if (0 === this.activeIndex) this.type = 'category';\r\n      if (1 === this.activeIndex) this.type = 'tag';\r\n\r\n      return this.$http.get(`/${this.type}/${node.id}`)\r\n        .then(res => {\r\n          this.category = { ...res.data };\r\n          this.category.regDate = this.$moment(this.category.regDate).format('YYYY-MM-DD HH:mm:ss')\r\n        });\r\n    },\r\n    /** 카테고리 추가 */\r\n    addCategory() {\r\n      this.category = {};\r\n      this.category.id = null;\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n\r\n</style>","<template>\r\n  <ui-split-form :name=\"'saveCodeForm'\"\r\n                 @onSubmit=\"onSubmit\"\r\n                 @onRemove=\"onRemove\"\r\n                 :btnRemove=\"true\">\r\n\r\n    <ui-hidden-field :name=\"'id'\" :value=\"category.id\">\r\n    </ui-hidden-field>\r\n\r\n    <label for=\"codeId\">카테고리 명</label>\r\n    <div>\r\n      <ui-text-field :type=\"'text'\"\r\n                     :name=\"'nm'\"\r\n                     :id=\"'categoryNm'\"\r\n                     :rules=\"'required'\"\r\n                     :value=\"category.nm\">\r\n      </ui-text-field>\r\n    </div>\r\n\r\n    <label for=\"codeId\">카테고리 등록일시</label>\r\n    <div>\r\n      <ui-text-field :type=\"'text'\"\r\n                     :name=\"'regDate'\"\r\n                     :id=\"'categoryRegDate'\"\r\n                     :value=\"category.regDate\">\r\n      </ui-text-field>\r\n    </div>\r\n  </ui-split-form>\r\n</template>\r\n\r\n<script>\r\nimport { messageUtil } from '@/utils/ui/messageUtil';\r\n\r\nexport default {\r\n  name: 'app-save-category',\r\n  props: {\r\n    /** 카테고리 정보 */\r\n    category: Object,\r\n  },\r\n  methods: {\r\n    /** 카테고리 저장 */\r\n    async onSubmit(values) {\r\n      console.log(values);\r\n      \r\n      const confirm = await messageUtil.confirmSuccess('저장하시겠습니까?');\r\n      if (!confirm) return;\r\n    },\r\n    /** 카테고리 삭제 */\r\n    async onRemove() {\r\n      const confirm = await messageUtil.confirmSuccess('삭제하시겠습니까?');\r\n      if (!confirm) return;\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n\r\n</style>","import { render } from \"./AppSaveCategory.vue?vue&type=template&id=7e300cce\"\nimport script from \"./AppSaveCategory.vue?vue&type=script&lang=js\"\nexport * from \"./AppSaveCategory.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\dmitr\\\\Desktop\\\\p\\\\repo\\\\selosele2\\\\frontend\\\\selosele2\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./AppAdminCategory.vue?vue&type=template&id=303e4e8e\"\nimport script from \"./AppAdminCategory.vue?vue&type=script&lang=js\"\nexport * from \"./AppAdminCategory.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\dmitr\\\\Desktop\\\\p\\\\repo\\\\selosele2\\\\frontend\\\\selosele2\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["BreadcrumbService","constructor","setPageTitle","pageTitle","isNotEmpty","document","title","store","breadcrumbService","class","_createBlock","_component_app_content_wrapper","$data","_createElementBlock","_Fragment","key","_createElementVNode","_createVNode","_component_ui_button","color","onClick","$options","_component_ui_tabs","onOnTabChanged","_component_ui_tab","name","_component_ui_split_pane","_component_ui_pane","isTransparent","_component_ui_tree","nodes","useCheckbox","filter","placeholder","onOnNodeClick","_ctx","_component_app_save_category","category","id","_component_ui_skeletor","height","for","_component_ui_split_form","onOnSubmit","onOnRemove","btnRemove","_component_ui_hidden_field","value","$props","_hoisted_1","_component_ui_text_field","type","rules","nm","_hoisted_2","regDate","props","Object","methods","async","values","console","log","messageUtil","__exports__","components","AppSaveCategory","data","dataLoaded","categoryTree","tagTree","activeIndex","created","this","init","Promise","all","listTreeCategoryAndPost","listTreeTagAndPost","$store","commit","$http","get","then","res","createTree","forEach","parent","childNodes","postCategory","postTag","rootNode","label","getTreeLabel","map","child","idx","self","length","postNode","postId","post","pushNode","node","push","onNodeClick","getCategory","onTabChanged","selectedTab","tab","index","$moment","format","addCategory","render"],"sourceRoot":""}